- name: Create nodemanager log dir
  when: "'hadoop_managers' in group_names"
  ansible.builtin.file:
    path: "{{ hadoop_yarn_site['yarn.nodemanager.log-dirs'] | default(hadoop_yarn_site_defaults['yarn.nodemanager.log-dirs']) }}"
    state: directory
    mode: '774'
  become: true
  become_user: hdfs
- name: Create nodemanager local dir
  when: "'hadoop_managers' in group_names"
  ansible.builtin.file:
    path: "{{ hadoop_yarn_site['yarn.nodemanager.local-dirs'] | default(hadoop_yarn_site_defaults['yarn.nodemanager.local-dirs']) }}"
    state: directory
    mode: '774'
  become: true
  become_user: hdfs
- name: Start manager nodes 1/2
  become: true
  become_user: yarn
  block:
    - name: Restart resourcemanager
      ansible.builtin.include_tasks: ./restart_hadoop_service.yaml
      vars:
        start_service: "{{ 'hadoop_managers' in group_names }}"
        hadoop_service_binary: yarn
        hadoop_service_name: resourcemanager
    - name: Restart nodemanager
      ansible.builtin.include_tasks: ./restart_hadoop_service.yaml
      vars:
        start_service: "{{ 'hadoop_managers' in group_names }}"
        hadoop_service_binary: yarn
        hadoop_service_name: nodemanager
    - name: Restart proxyserver
      ansible.builtin.include_tasks: ./restart_hadoop_service.yaml
      vars:
        start_service: "{{ 'hadoop_managers' in group_names }}"
        hadoop_service_binary: yarn
        hadoop_service_name: proxyserver

- name: Start manager nodes 2/2
  become: true
  become_user: mapred
  block:
    - name: Restart historyserver
      ansible.builtin.include_tasks: ./restart_hadoop_service.yaml
      vars:
        start_service: "{{ 'hadoop_managers' in group_names }}"
        hadoop_service_binary: mapred
        hadoop_service_name: historyserver
