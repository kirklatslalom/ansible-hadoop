---
- name: Deploy Hadoop
  when: "'hadoop' in group_names"
  block:
    - name: Create dir
      ansible.builtin.file:
        path: /var/lib/apt/
        state: directory
        mode: '0755'

    - name: Install needed packages
      ansible.builtin.package:
        name:
          - wget
        state: present
      tags: hadoop, configureHadoop
      become: true

    - name: Create Hadoop users
      ansible.builtin.import_tasks: ./create_hadoop_users.yaml
      tags: hadoop, configureHadoop

    - name: Create directory for hadoop distro
      ansible.builtin.file:
        path: "{{ hadoop_target_dir }}"
        state: directory
        mode: "0755"
      tags: hadoop, installHadoop

    - name: Install OpenJDK
      ansible.builtin.import_tasks: ./install_openjdk.yaml
      vars:
        jre_url: "{{ hadoop_jre_url }}"
        jre_local_pkg: "{{ hadoop_jre_local_pkg }}"
        jre_target_dir: "{{ hadoop_target_dir }}/jre"
      tags: jre, hadoop, installHadoop

    - name: Download and install Hadoop
      ansible.builtin.import_tasks: ./download_and_install_hadoop.yaml
      tags: hadoop, installHadoop

    - name: Create default log dir
      ansible.builtin.file:
        path: "{{ hadoop_distro_home }}/logs"
        state: directory
        mode: "0550"
      tags: hadoop, installHadoop

    - name: Change owner to hdfs and allow group hadoop rwx
      ansible.builtin.file:
        path: "{{ hadoop_target_dir }}"
        owner: hdfs
        group: hadoop
        mode: u=rwx,g=rwx,o=r
        recurse: true
        state: directory
      tags: hadoop, configureHadoop

    - name: Configure config files
      when: "'hadoop' in group_names"
      ansible.builtin.import_tasks: ./configure_config_files.yaml
      tags: hadoop, configureHadoop

    - name: Configure Hadoop
      ansible.builtin.import_tasks: ./configure_hadoop.yaml
      tags: hadoop, configureHadoop, configureHadoopHA

    - name: Format namenode
      ansible.builtin.import_tasks: ./format_namenode.yaml
      tags: hadoop

    - name: Configure datanodes
      when: "'hadoop_datanodes' in group_names"
      ansible.builtin.import_tasks: ./configure_datanodes.yaml
      tags: hadoop

    - name: Download sample JARs for teragen, terasort
      ansible.builtin.import_tasks: ./download_sample_JARs.yaml
      tags: hadoop, hadoopInstallSampleJARs

    - name: Start namenodes
      ansible.builtin.import_tasks: ./start_namenodes.yaml
      tags: hadoop, startHadoopServices, startNameNodes

    - name: Change owner of hdfs '/' to hdfs:hadoop
      when: inventory_hostname == groups['hadoop_namenodes'][0]
      ansible.builtin.shell: "{{ hadoop_distro_home }}/bin/hdfs dfs -chown hdfs:hadoop /"
      become: true
      become_user: hdfs
      tags: hadoop, startHadoopServices, startNameNodes

    - name: Change permissions of hdfs '/' to 775
      when: inventory_hostname == groups['hadoop_namenodes'][0]
      ansible.builtin.shell: "{{ hadoop_distro_home }}/bin/hdfs dfs -chmod 775 /"
      become: true
      become_user: hdfs
      tags: hadoop, startHadoopServices, startNameNodes

    - name: Start manager nodes
      ansible.builtin.import_tasks: ./start_manager_nodes.yaml
      tags: hadoop, startHadoopServices, startManagerNodes

    - name: Start datanodes
      ansible.builtin.import_tasks: ./start_datanodes.yaml
      tags: hadoop, startHadoopServices, startDataNodes
